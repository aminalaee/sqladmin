[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sqladmin"
description = 'SQLAlchemy admin for FastAPI and Starlette'
readme = "README.md"
requires-python = ">=3.8"
license = "BSD-3-Clause"
keywords = ["sqlalchemy", "fastapi", "starlette", "admin"]
authors = [
  { name = "Amin Alaee", email = "me@aminalaee.dev" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Topic :: Internet :: WWW/HTTP",
  "Operating System :: OS Independent",
]
dependencies = [
  "starlette",
  "sqlalchemy >=1.4",
  "wtforms >=3.1, <3.2",
  "jinja2",
  "python-multipart",
]
dynamic = ["version"]

[project.optional-dependencies]
full = [
    "itsdangerous",
]

[project.urls]
Documentation = "https://aminalaee.dev/sqladmin"
Issues = "https://github.com/aminalaee/sqladmin/issues"
Source = "https://github.com/aminalaee/sqladmin"

[tool.hatch.version]
path = "sqladmin/__init__.py"

[tool.hatch.build.targets.wheel]
[tool.hatch.build.targets.sdist]
include = [
    "/sqladmin",
]

[tool.hatch.build]
exclude = [
  "tests/*",
]

[tool.hatch.envs.test]
dependencies = [
  "aiosqlite==0.19.0",
  "arrow==1.3.0",
  "asyncpg==0.29.0",
  "babel==2.13.1",
  "build==1.0.3",
  "colour==0.1.5",
  "coverage==7.3.2",
  "email-validator==2.1.0",
  "fastapi-storages==0.1.0",
  "greenlet==3.0.1",
  "httpx==0.25.1",
  "itsdangerous==2.1.2",
  "phonenumbers==8.13.24",
  "pillow==10.1.0",
  "psycopg2-binary==2.9.9",
  "pytest==7.4.2",
  "python-dateutil==2.8.2",
  "sqlalchemy_utils==0.41.1",
]

[[tool.hatch.envs.test.matrix]]
python = ["38", "39", "310", "311", "3.12"]

[tool.hatch.envs.lint]
dependencies = [
  "mypy==1.6.1",
  "ruff==0.1.5",
  "sqlalchemy~=1.4", # MyPy issues with SQLAlchemy V2
]

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs-material==9.1.3",
  "mkdocs==1.4.2",
  "mkdocstrings[python]==0.20.0",
]

[tool.hatch.envs.test.scripts]
cov = [
  "coverage report --show-missing --skip-covered --fail-under=99",
  "coverage xml",
]
test = "coverage run -a --concurrency=thread,greenlet -m pytest {args}"

[tool.hatch.envs.lint.scripts]
check = [
  "ruff .",
  "ruff format --check .",
  "mypy sqladmin",
]
format = [
  "ruff format .",
  "ruff --fix .",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve --dev-addr localhost:8080"
deploy = "mkdocs gh-deploy --force"

[[tool.hatch.envs.test.matrix]]
sqlalchemy = ["1.4", "2.0"]

[tool.hatch.envs.test.overrides]
matrix.sqlalchemy.dependencies = [
  { value = "sqlalchemy==1.4.41", if = ["1.4"] },
  { value = "sqlmodel==0.0.8", if = ["1.4"] },
  { value = "sqlalchemy==2.0", if = ["2.0"] },
]

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true

[tool.ruff]
select = ["E", "F", "I"]

[tool.coverage.run]
source_pkgs = [
  "sqladmin",
  "tests",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "pragma: nocover",
    "except NotImplementedError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
